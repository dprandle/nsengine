* DONE Rename Everything [100%]
** DONE Managers [100%]
*** DONE NSResManager
*** DONE NSMatManager
*** DONE NSTexManager
*** DONE NSEntityManager
*** DONE NSPluginManager
*** DONE NSSceneManager
*** DONE NSAnimManager
*** DONE NSInputMapManager
*** DONE NSMeshManager
*** DONE NSShaderManager
** DONE Resource [100%]
*** DONE NSResource
*** DONE NSAnimSet
*** DONE NSMesh
*** DONE NSShader (and all subclasses)
*** DONE NSTexture (and all subclasses)
*** DONE NSMaterial
*** DONE NSScene
*** DONE NSPlugin
*** DONE NSInputMap
*** DONE NSEntity
** DONE Systems [100%]
*** DONE NSSystem
*** DONE NSRenderSystem
*** DONE NSInputSystem
*** DONE NSSelectionSystem
*** DONE NSMovementSystem
*** DONE NSCameraSystem
*** DONE NSAnimationSystem
*** DONE NSParticleSystem
*** DONE NSBuildSystem
** DONE Components [100%]
*** DONE NSComponent
*** DONE NSCamComp
*** DONE NSInputComp
*** DONE NSSelComp
*** DONE NSTFormComp
*** DONE NSRenderComp
*** DONE NSTileComp
*** DONE NSTileBrushComp
*** DONE NSAnimComp
*** DONE NSTerrainComp
*** DONE NSLightComp
*** DONE NSOccupyComp
*** DONE NSParticleComp
** DONE Math [100%]
*** DONE NSQuat
*** DONE NSVec2
*** DONE NSVec3
*** DONE NSVec4
*** DONE NSMat2
*** DONE NSMat3
*** DONE NSMat4
*** DONE Math functions
** DONE Other OpenGL Classes [100%]
*** DONE NSBufferObject
*** DONE NSGLObject
*** DONE NSTransformFeedbackObject
*** DONE NSVertexArrayObject
*** DONE NSFramebuffer
** DONE Events [100%]
*** DONE NSEvent
*** DONE NSEventDispatcher
*** DONE NSEventHandler
** DONE Other [100%]
*** DONE NSCallback
*** DONE NSDebug
*** DONE NSEngine
*** DONE NSFactory
*** DONE NSFileos functions
*** DONE NSLogFile
*** DONE NSPupper
*** DONE NSTileGrid
*** DONE NSTimer
* DONE Redistribute "nsglobal"
* DONE Get build system working [100%]
** DONE Get tile brushes working again
** DONE Get object brushes working again
** DONE Rework build system events
* TODO Testing [83%]
** DONE Test Animation System again
** DONE Test lighting parameters stuff
** TODO Test particle system make sure works
** DONE Test loading and saving of each resource type
*** TODO Map
*** TODO Mesh
*** TODO Material
*** TODO Animation
*** TODO Plugins
*** DONE Texture
*** TODO Shader
*** TODO Entity
*** DONE InputMap
** DONE Test skybox
** DONE Test fog
* TODO Create UI System
* TODO Create audio system
* TODO Create thread mechanism full multiplatform
* DONE Reintegrate the new engine version in to the toolkit
* DONE Create method for transparency
* DONE Implement copy ctor and assignment operators for components and resources [100%]
** DONE nsentity
** DONE nsmesh
** DONE nsanim_set
** DONE nsshader
** DONE nstexture
** DONE nsmaterial
** DONE nsinput_map
** DONE nsscene
** DONE nsplugin
** DONE nsanim_comp
** DONE nscam_comp
** DONE nslight_comp
** DONE nsparticle_comp
** DONE nsoccupy_comp
** DONE nsrender_comp
** DONE nssel_comp
** DONE nsterrain_comp
** DONE nstform_comp
** DONE nstile_brush_comp
** DONE nstile_comp
* TODO Make copy function protected or remove all together


Left off with creating a render_pass struct.. my idea is as follows:

each render pass has some opengl state associated with it, along with a set of shader/material/draw calls

a pre_render function can be implemented to do special things, along with a post_render function for each render pass - this 
