type:<nsstring>nsshader</nsstring>
vertex.type:<uint32>35633</uint32>
vertex.source:<nsstring>
#version 440
layout (location = 0) in vec3 position;

void main()
{
	gl_Position =  vec4(1.0, 1.0, 1.0, 1.0);
}
</nsstring>
geometry.type:<uint32>36313</uint32>
geometry.source:<nsstring>
#version 440

layout (points) in;
layout (triangle_strip, max_vertices = 16) out;

uniform mat3 content_tform;
uniform vec2 content_wscale;
uniform vec4 border_pix;
uniform vec4 viewport;

vec2 inner_rect[4];
vec2 outer_rect[4];
vec2 verts[4];

void draw_trap()
{
	for (uint i = 0; i < 4; ++i)
	{
		gl_Position = vec4( verts[i] / viewport.zw * 2 - vec2(1.0), 1.0, 1.0);
		EmitVertex();
	}
    EndPrimitive();	
}

void main()
{	
	inner_rect[0] = viewport.xy * content_wscale;
	inner_rect[1] = viewport.xw * content_wscale;
	inner_rect[2] = viewport.zy * content_wscale;
	inner_rect[3] = viewport.zw * content_wscale;
	outer_rect[0] = inner_rect[0] - border_pix.xy;
	outer_rect[1] = inner_rect[1] + vec2(-border_pix.x, border_pix.w);
	outer_rect[2] = inner_rect[2] + vec2( border_pix.z,-border_pix.y);
	outer_rect[3] = inner_rect[3] + border_pix.zw;
	
	for (uint i = 0; i < 4; ++i)
	{
		inner_rect[i] = (content_tform * vec3(inner_rect[i], 1.0)).xy;
		outer_rect[i] = (content_tform * vec3(outer_rect[i], 1.0)).xy;
	}

	verts[0] = outer_rect[0];
	verts[1] = outer_rect[1];
	verts[2] = inner_rect[0];
	verts[3] = inner_rect[1];
	draw_trap();
	
	verts[0] = inner_rect[1];
	verts[1] = outer_rect[1];
	verts[2] = inner_rect[3];
	verts[3] = outer_rect[3];
	draw_trap();
	
	verts[0] = inner_rect[2];
	verts[1] = inner_rect[3];
	verts[2] = outer_rect[2];
	verts[3] = outer_rect[3];
	draw_trap();
	
	verts[0] = outer_rect[0];
	verts[1] = inner_rect[0];
	verts[2] = outer_rect[2];
	verts[3] = inner_rect[2];
	draw_trap();
}
</nsstring>
fragment.type:<uint32>35632</uint32>
fragment.source:<nsstring>
#version 440

layout (location = 0) out vec4 final_frag_color;
layout (location = 1) out uvec3 final_picking;

uniform vec4 frag_color_out;
uniform uvec3 entity_id;

void main()
{
	final_frag_color = frag_color_out;
	final_picking = entity_id;
}
</nsstring>
