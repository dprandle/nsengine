message("${CMAKE_BUILD_TYPE} build starting...\n")

if (UNIX)
  add_definitions(-std=c++11)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -fms-extensions")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fms-extensions")
  set(CMAKE_LINKER_FLAGS "${CMAKE_LINKER_FLAGS} --whole-archive" )
  set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -O0")
  set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -O0")
elseif (WIN32)
  set(CMAKE_LINKER_FLAGS "${CMAKE_LINKER_FLAGS} /WX /NODEFAULTLIB:MSVCRT /NODEFAULTLIB:LIBCMT" )
  #set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
  #set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /MP")
endif()


if (UNIX)
  message("Linking UNIX libraries")
  link_libraries(nsengine)
  link_libraries(nsmath)
  link_directories(${PROJECT_SOURCE_DIR}/lib/${PLATFORM})
  link_libraries(assimp)
  link_libraries(debug glfwd)
  link_libraries(optimized glfw)
  link_libraries(sndfile)
  link_libraries(openal)
elseif (WIN32)
  message("Linking Windows libraries")
  link_libraries(nsengine)
  link_libraries(nsmath)
  link_directories(${PROJECT_SOURCE_DIR}/lib/${PLATFORM})
  link_libraries(assimp-vc140-mt)
  link_libraries(debug glfw3ddll)
  link_libraries(optimized glfw3dll)
  link_libraries(libsndfile-1)
  link_libraries(OpenAL32)
  link_libraries(DbgHelp)
endif()

link_libraries(debug freetyped)
link_libraries(optimized freetype)


# link with opengl (no debug version)
find_package(OpenGL REQUIRED)
if(NOT OPENGL_FOUND)
message(ERROR "Error: OpenGL not found on your system - please make sure you have it downloaded.")
endif(NOT OPENGL_FOUND)
link_libraries(${OPENGL_LIBRARIES})

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin/${PLATFORM})

add_executable(most_basic_test most_basic_test.cpp)
set_target_properties(most_basic_test PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})

add_executable(prefab_testing prefab_testing.cpp)
set_target_properties(most_basic_test PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})

if (WIN32)
    set_target_properties(most_basic_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_RUNTIME_OUTPUT_DIRECTORY} )
    set_target_properties(most_basic_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_RUNTIME_OUTPUT_DIRECTORY} )
    set_target_properties(most_basic_test PROPERTIES LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} )
    set_target_properties(most_basic_test PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} )
    set_target_properties(most_basic_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_RUNTIME_OUTPUT_DIRECTORY} )
    set_target_properties(most_basic_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_RUNTIME_OUTPUT_DIRECTORY} )
endif (WIN32)
